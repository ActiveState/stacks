#!/bin/bash

set -ex

STACK=$1
FILE=${STACK}.tar.gz
S3_RETRIES=3
MD5_CMD="md5 $FILE | cut -d' ' -f4"
if [ "$(uname)" == "Linux" ]; then
  MD5_CMD="md5sum $FILE | cut -d' ' -f1"
fi

if [ $STACK != "cflinuxfs2" ]; then
  echo "${STACK} is not a valid stack!"
  exit 1
fi

upload_s3() {
  for i in $(seq 1 $S3_RETRIES); do
    md5_hash_before=$(bash -c "$MD5_CMD")
    ./bin/upload_to_s3 $STACK | tee etag
    md5_hash_after=$(cat etag)

    if [ "$md5_hash_before" != "$md5_hash_after" ]; then
      if [ $i == $S3_RETRIES ]; then
        echo "S3 Upload failed, MD5 hash does not match."
        echo "Local file: $md5_hash_before"
        echo "S3 file: $md5_hash_after"
        exit 1
      fi
    else
      break
    fi
  done
}

create_receipt() {
  echo "Rootfs SHASUM: `shasum $FILE`" > $STACK/${STACK}_receipt
  echo "Docker Image: `docker images | grep cloudfoundry/$STACK | grep latest | awk '{ print $3 }'`" >> $STACK/${STACK}_receipt
  echo "S3 ETag: `cat etag`" >> $STACK/${STACK}_receipt
  echo "" >> $STACK/${STACK}_receipt
  cat $STACK/${STACK}_dpkg_l.out >> $STACK/${STACK}_receipt
  echo ""
  echo "Don't forget to save the $STACK/${STACK}_receipt file!"
}


cleanup() {
  rm etag
}

trap cleanup EXIT

upload_s3
./bin/docker_push.sh $STACK
create_receipt
