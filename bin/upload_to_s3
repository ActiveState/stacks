#!/usr/bin/env ruby

require "aws/s3"

STACK_NAME = ARGV[0]
FILE= "#{STACK_NAME}.tar.gz"
ENVIRONMENT = ARGV.include?("--latest") ? "latest" : "dev"
AWS_ID = ENV['AMAZON_ACCESS_KEY_ID']
AWS_KEY = ENV['AMAZON_SECRET_ACCESS_KEY']
BUCKET_NAME = "cf-runtime-stacks"

raise "Usage: upload <stack_name> (e.g. cflinuxfs2)" unless STACK_NAME
raise "rootfs file not found: #{FILE}" unless File.exists?(FILE)

begin
  AWS::S3::Base.establish_connection!(
    :access_key_id => AWS_ID,
    :secret_access_key => AWS_KEY
  )
  AWS::S3::Bucket.find(BUCKET_NAME)
rescue AWS::S3::MissingAccessKey
  puts "Access denied, please set AMAZON_ACCESS_KEY_ID and AMAZON_SECRET_ACCESS_KEY like so:"
  puts "export AMAZON_ACCESS_KEY_ID=", "export AMAZON_SECRET_ACCESS_KEY="
  exit 1
end

SIZE = File.size(FILE) / (1024 * 1024)
$stderr.puts "Uploading #{FILE} (#{SIZE}M)"

response = AWS::S3::S3Object.store("#{STACK_NAME}.#{ENVIRONMENT}.tgz", File.open(FILE), BUCKET_NAME, :access => :public_read)
puts response.etag
